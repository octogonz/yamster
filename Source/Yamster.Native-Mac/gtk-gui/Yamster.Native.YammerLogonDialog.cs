
// This file has been generated by the GUI designer. Do not modify.
namespace Yamster.Native
{
	public partial class YammerLogonDialog
	{
		private global::Gtk.HBox hbox1;
		private global::Gtk.Image image1;
		private global::Gtk.Label lblMessage;
		private global::Gtk.Button btnOk;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Yamster.Native.YammerLogonDialog
			this.Name = "Yamster.Native.YammerLogonDialog";
			this.Title = global::Mono.Unix.Catalog.GetString (" Login To Yammer");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			this.BorderWidth = ((uint)(10));
			this.Resizable = false;
			this.AllowGrow = false;
			// Internal child Yamster.Native.YammerLogonDialog.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "dialog1_VBox";
			w1.BorderWidth = ((uint)(2));
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 15;
			// Container child hbox1.Gtk.Box+BoxChild
			this.image1 = new global::Gtk.Image ();
			this.image1.Name = "image1";
			this.image1.Yalign = 0F;
			this.image1.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-dialog-warning", global::Gtk.IconSize.Dialog);
			this.hbox1.Add (this.image1);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.image1]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.lblMessage = new global::Gtk.Label ();
			this.lblMessage.Name = "lblMessage";
			this.lblMessage.LabelProp = global::Mono.Unix.Catalog.GetString (@"Single-Sign-On login is not yet implemented for Mac.  You can work around this problem by running Yamster! on a Windows computer, completing the login, and then copying the file ""settings.json"" to your Mac's settings folder:

~/Documents/Yamster/

You only need to do this once.
See Yamster-ReadMe-Mac.txt for details.");
			this.lblMessage.UseMarkup = true;
			this.lblMessage.Wrap = true;
			this.hbox1.Add (this.lblMessage);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.lblMessage]));
			w3.Position = 1;
			w3.Expand = false;
			w3.Fill = false;
			w1.Add (this.hbox1);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(w1 [this.hbox1]));
			w4.Position = 0;
			w4.Expand = false;
			w4.Fill = false;
			// Internal child Yamster.Native.YammerLogonDialog.ActionArea
			global::Gtk.HButtonBox w5 = this.ActionArea;
			w5.Name = "dialog1_ActionArea";
			w5.Spacing = 10;
			w5.BorderWidth = ((uint)(5));
			w5.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.btnOk = new global::Gtk.Button ();
			this.btnOk.CanDefault = true;
			this.btnOk.CanFocus = true;
			this.btnOk.Name = "btnOk";
			this.btnOk.UseStock = true;
			this.btnOk.UseUnderline = true;
			this.btnOk.Label = "gtk-ok";
			this.AddActionWidget (this.btnOk, -5);
			global::Gtk.ButtonBox.ButtonBoxChild w6 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w5 [this.btnOk]));
			w6.Expand = false;
			w6.Fill = false;
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 455;
			this.DefaultHeight = 257;
			this.Show ();
			this.btnOk.Clicked += new global::System.EventHandler (this.btnOk_Clicked);
		}
	}
}
